@page "{orderBy?}"

@using FoodAndStyleOrderPlanning.Core
@model FoodAndStyleOrderPlanning.Pages.Products.ListModel
@{
    ViewData["Title"] = "Προϊόντα";
}
<form method="get">
    <div class="form-group mt-1">
        <div class="input-group">
            <input class="form-control" type="search" asp-for="SearchTerm">
            <span class="input-group-append">
                <button class="btn btn-outline-secondary" type="submit">
                    <i class="fa fa-search"></i>
                </button>
            </span>
        </div>
    </div>
</form>

<a asp-page="./Edit" class="btn btn-primary mb-2">Προσθήκη νέου</a>

<table class="table table-sm table-striped table-hover">
    <tr>
        <th>Id</th>
        <th><a asp-page="./List" asp-route-orderBy="">'Ονομα</a></th>
        <th>Ποιότητα</th>
        <th>Μ.Μ.</th>
        <th><a asp-page="./List" asp-route-orderBy="type">Τύπος</a></th>
        <th><a asp-page="./List" asp-route-orderBy="supplier">Προμηθευτής</a></th>
        <th>Τιμή</th>
        <th>Παραγγελλία πριν</th>
        <th>Επεξεργασία</th>
    </tr>
    @foreach (var r in Model.Products)
    {
        <tr>
            <td>@r.Id</td>
            <td>@r.Name</td>
            <td>@r.Quality</td>
            <td>@LanguageResources.GetMeasuringUnitTranslation(r.MeasuringUnit)</td>
            <td>@LanguageResources.GetProductTypeTranslation(r.ProductType)</td>

            @if (@r.Supplier.IsActive)
            {
                <td>@r.Supplier.Name</td>
            }
            else
            {
                <td class="alert-danger" data-toggle="tooltip" data-placement="top" title="Ο προμηθευτής δεν ειναι ενεργός">@r.Supplier.Name</td>
            }

            <td>@r.Price¢</td>

            <td>@LanguageResources.GetProductFreshnessTranslation(r.GetProductFreshness())</td>
            <td>
                <a class="btn btn-lg" asp-page="./Edit" asp-route-id="@r.Id">
                    <i class="fa fa-edit"></i>
                </a>
            </td>
        </tr>
    }
</table>

<a asp-page="./Edit" class="btn btn-primary">Προσθήκη νέου</a>


<script type="text/javascript">

     $.urlParam = function (name) {
        var results = new RegExp('[\?&]' + name + '=([^&#]*)')
                          .exec(window.location.search);

        return (results !== null) ? results[1] || 0 : false;
    }

    $(function () {

        var searchTermInputId = '#'.concat('@Html.IdFor(o => o.SearchTerm)');
        $(searchTermInputId).focus();

        var searchTerm = $.urlParam('SearchTerm');
        if (searchTerm != null && searchTerm.length > 0) {
            var searchTermInputId = '#'.concat('@Html.IdFor(o => o.SearchTerm)');
            $(searchTermInputId).val('').val(decodeURIComponent(searchTerm));
            return;
        }

        var modifiedProductId = localStorage.getItem('modifiedProductId');
        var maxProductId = @Model.Products?.Select(p=>p.Id).DefaultIfEmpty(0).Max();

        if (modifiedProductId == null)
            return;

        if (modifiedProductId == 0)
            modifiedProductId = maxProductId;

        var blinkRow = $("td").filter(function() {
            return $(this).text() == modifiedProductId;
        }).closest("tr");

            $('html, body').animate({
                scrollTop: blinkRow.offset().top - 100
            }, 500);

        blinkRow.addClass('updateSuccess');

        setTimeout(function(){
            blinkRow.fadeOut('slow',function(){ $(this).removeClass('updateSuccess').show();});
        }, 1000);

        localStorage.removeItem('modifiedProductId');
    });
</script>