@page "{id:int?}"

@using FoodAndStyleOrderPlanning.Core
@using System.Linq
@model FoodAndStyleOrderPlanning.Pages.Orders.EditModel
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<form method="post">

    <div class="card">
        <div class="card-body">
            @*<h5 class="card-title">Στοιχεία Συνταγής</h5>*@
            <div class="row">
                <div class="col-sm-8">
                    <input type="hidden" asp-for="@Model.Order.Id" />
                    <input type="hidden" asp-for="@Model.Order.CreatedOn" />
                    <input type="hidden" asp-for="@Model.Order.CreatedBy" />
                    <input type="hidden" asp-for="@Model.Order.UpdatedOn" />
                    <input type="hidden" asp-for="@Model.Order.UpdatedBy" />
                    <div class="form-group">
                        <label asp-for="@Model.Order.Name">Ονομασία</label>
                        <input asp-for="@Model.Order.Name" class="form-control w-100 font-weight-bold" />
                        <span class="text-danger" asp-validation-for="@Model.Order.Name"></span>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Αποθήκευση</button>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="card" style="width: 18rem;">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">Δημιουργία: @Model.Order.CreatedOn.ToString(Helpers.DateTimeFormater)</li>
                            <li class="list-group-item">Από: @Model.Order.CreatedBy</li>
                            <li class="list-group-item">Τροποποίηση: @Model.Order.UpdatedOn.ToString(Helpers.DateTimeFormater)</li>
                            <li class="list-group-item">Από: @Model.Order.UpdatedBy</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <table cellpadding="0" cellspacing="0" class="table table-sm table-striped">
        <tr>
            <th class="w-25">Συνταγη</th>
            <th>Δευ.</th>
            <th>Τρι.</th>
            <th>Τετ.</th>
            <th>Πεμ.</th>
            <th>Παρ.</th>
            <th>Σαβ.</th>
            <th>Κυρ.</th>
        </tr>

        @for (int i = 0; i < Model.RecipeChoices.Choices.Count; i++)
        {
            <tr>
                <td>
                    <input type="hidden" asp-for="@Model.RecipeChoices.Choices[i].Id" />
                    <input type="hidden" asp-for="@Model.RecipeChoices.Choices[i].RecipeId" />
                    <input type="hidden" asp-for="@Model.RecipeChoices.Choices[i].Name" />
                    <input type="hidden" asp-for="@Model.RecipeChoices.Choices[i].RecipeResultingQuantity" />
                    <i class="fa fa-info-circle" data-toggle="tooltip" data-placement="top" title="@String.Format("{0:n0}", Model.RecipeChoices.Choices[i].RecipeResultingQuantity) γραμ."></i>
                    &nbsp;@Model.RecipeChoices.Choices[i].Name
                </td>

                <td>
                    <input asp-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Monday" class="form-control font-weight-bold" />
                    <span class="text-danger" asp-validation-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Monday"></span>                    
                </td>

                <td>
                    <input asp-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Tuesday" class="form-control font-weight-bold" />
                    <span class="text-danger" asp-validation-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Tuesday"></span>
                </td>

                <td>
                    <input asp-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Wednesday" class="form-control font-weight-bold" />
                    <span class="text-danger" asp-validation-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Wednesday"></span>
                </td>

                <td>
                    <input asp-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Thursday" class="form-control font-weight-bold" />
                    <span class="text-danger" asp-validation-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Thursday"></span>
                </td>

                <td>
                    <input asp-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Friday" class="form-control font-weight-bold" />
                    <span class="text-danger" asp-validation-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Friday"></span>
                </td>

                <td>
                    <input asp-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Saturday" class="form-control font-weight-bold" />
                    <span class="text-danger" asp-validation-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Saturday"></span>
                </td>

                <td>
                    <input asp-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Sunday" class="form-control font-weight-bold" />
                    <span class="text-danger" asp-validation-for="@Model.RecipeChoices.Choices[i].OrderQuantity_Sunday"></span>
                </td>

            </tr>
        }
    </table>

</form>

<div class="card">
    <div class="card-body">
        <div class="font-weight-bold bg-primary card-title">
            Προϊόντα Εβδομάδας / Συνολικό Kόστος: @String.Format("{0:n}€", Model.OrderProductItems.Sum(o => (o.Product.Price * o.Quantity) / 100))
        </div>
        <table class="table table-sm table-striped">
            <tr>
                <th>Τύπος</th>
                <th>Προϊόν</th>
                <th>Ποσότητα</th>
                <th>Κόστος</th>
                <th>Προμηθευτής</th>
            </tr>
            @foreach (var o in Model.OrderProductItems)
            {
                <tr>
                    <td>@LanguageResources.GetProductTypeTranslation(@o.Product.ProductType)</td>
                    <td>@o.Product.Name</td>
                    <td><b>@String.Format("{0:n0}", o.Quantity)</b>&nbsp;@LanguageResources.GetMeasuringUnitTranslation(o.Product.MeasuringUnit)</td>
                    <td>@String.Format("{0:n}€", (o.Product.Price * o.Quantity) / 100)</td>
                    <td>@o.Product.Supplier.Name</td>
                </tr>
            }
        </table>
    </div>
</div>

<br />

@*@foreach (ProductDeliveryDay day in ((ProductDeliveryDay[])Enum.GetValues(typeof(ProductDeliveryDay))).OrderBy(e=>(int)e))*@

@foreach (ProductDeliveryDay day in Model.ProductDeliveryPerDay.Keys.OrderBy(k => (int)k))
{
    <div class="card">
        <div class="font-weight-bold card-title">
            Παράδοση @day.ToString() / Συνολικό Kόστος: @(String.Format("{0:n}€", Model.ProductDeliveryPerDay[day].Keys.ToList().Sum(i => (i.Price * Model.ProductDeliveryPerDay[day][i]) / 100)))
        </div>
        <div class="card-body">
            @foreach (var supplierProductKey in Model.ProductDeliveryPerDay[day].Keys.ToList().GroupBy(p => p.Supplier))
            {
                <div class="card">
                    <div class="bg-light card-title font-weight-bold text-secondary">
                        <a class="btn btn-lg" asp-page="./SendMail">
                            <i class="fa fa-envelope" data-toggle="tooltip" data-placement="top" title="Αποστολή με email" ></i>
                        </a>
                        Προμηθευτής @supplierProductKey.Key.Name / Συνολικό Kόστος: @(String.Format("{0:n}€", Model.ProductDeliveryPerDay[day].Keys.Where(p => p.Supplier == supplierProductKey.Key).ToList().Sum(i => (i.Price * Model.ProductDeliveryPerDay[day][i]) / 100)))
                    </div>
                    <div class="card-body">
                        <table class="table table-sm table-striped">
                            <tr>
                                <th>Τύπος</th>
                                <th>Προϊόν</th>
                                <th>Ποσότητα</th>
                                <th>Κόστος</th>
                            </tr>
                            @foreach (var product in Model.ProductDeliveryPerDay[day].Keys.Where(p => p.Supplier == supplierProductKey.Key))
                            {
                                <tr>
                                    <td>@LanguageResources.GetProductTypeTranslation(@product.ProductType)</td>
                                    <td>@product.Name</td>
                                    <td><b>@String.Format("{0:n0}", Model.ProductDeliveryPerDay[day][product])</b>&nbsp;@LanguageResources.GetMeasuringUnitTranslation(product.MeasuringUnit)</td>
                                    <td>@String.Format("{0:n}€", (product.Price * Model.ProductDeliveryPerDay[day][product]) / 100)</td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
                <br/>
            }
        </div>
    </div>
    <hr />

}
